"use strict";(self.webpackChunkswaptoshi_docs=self.webpackChunkswaptoshi_docs||[]).push([[906],{5635:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var t=a(4848),o=a(8453),r=a(1470),s=a(9365);const i={sidebar_position:4,description:"Discover how to become validator"},d="Become Swaptoshi Validator",c={id:"node/becoming-validator",title:"Become Swaptoshi Validator",description:"Discover how to become validator",source:"@site/content/node/becoming-validator.md",sourceDirName:"node",slug:"/node/becoming-validator",permalink:"/node/becoming-validator",draft:!1,unlisted:!1,editUrl:"https://github.com/swaptoshi/swaptoshi-docs/edit/main/content/node/becoming-validator.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Discover how to become validator"},sidebar:"docsSidebar",previous:{title:"Configure Swaptoshi Core",permalink:"/node/configure"},next:{title:"Enable/Disable Block Generation",permalink:"/node/enable-block-generation"}},l={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"How to register as a validator",id:"how-to-register-as-a-validator",level:2},{value:"Creating the validator keys",id:"creating-the-validator-keys",level:3},{value:"Create the Register Validator transaction",id:"create-the-register-validator-transaction",level:3},{value:"Send the transaction",id:"send-the-transaction",level:3},{value:"Check validator details",id:"check-validator-details",level:3},{value:"Allow methods in the node config",id:"allow-methods-in-the-node-config",level:2},{value:"Import the validator keys",id:"import-the-validator-keys",level:2},{value:"Verifying correct import",id:"verifying-correct-import",level:3},{value:"Set the hash onion",id:"set-the-hash-onion",level:2},{value:"Get the hash onion",id:"get-the-hash-onion",level:3},{value:"Initial validator info data",id:"initial-validator-info-data",level:2},{value:"How to enable block generation for the first time",id:"how-to-enable-block-generation-for-the-first-time",level:2},{value:"How to stake to increase the validator weight",id:"how-to-stake-to-increase-the-validator-weight",level:2}];function f(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"become-swaptoshi-validator",children:"Become Swaptoshi Validator"})}),"\n",(0,t.jsx)(n.p,{children:"On this page, you\u2019ll learn how to become a validator for a blockchain that uses the Klayr PoS module, like the Swaptoshi Mainnet."}),"\n",(0,t.jsx)(n.p,{children:"This includes how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Register as a validator"}),"\n",(0,t.jsx)(n.li,{children:"Enable block generation for the first time"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"To be able to become a validator for a blockchain, it is assumed that the following requirements are fulfilled:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Operating a ",(0,t.jsx)(n.a,{href:"./install",children:"swaptoshi-core"})," connected to the respective blockchain network, e.g. a Swaptoshi Core node connected to the Swaptoshi Mainnet."]}),"\n",(0,t.jsx)(n.li,{children:"Owning an account on the respective blockchain."}),"\n",(0,t.jsxs)(n.li,{children:['A sufficient account balance to send the "Register Validator" transaction (minimum 10 SWX for the Swaptoshi Mainnet). You can verify your balance for example by requesting the ',(0,t.jsx)(n.code,{children:"token_getBalance"})," endpoint."]}),"\n",(0,t.jsxs)(n.li,{children:["A sufficient account balance to perform the ",(0,t.jsx)(n.a,{href:"#how-to-stake-to-increase-the-validator-weight",children:"self-stake"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-to-register-as-a-validator",children:"How to register as a validator"}),"\n",(0,t.jsxs)(n.p,{children:["To generate new blocks on a network, it is required to register as a validator.\nThis is achieved by choosing a unique ",(0,t.jsx)(n.strong,{children:"validator name"}),' and posting a corresponding "Register Validator" transaction to the network.']}),"\n",(0,t.jsx)(n.h3,{id:"creating-the-validator-keys",children:"Creating the validator keys"}),"\n",(0,t.jsx)(n.p,{children:"It is possible to generate all relevant validator keys to enable block generation from the account passphrase."}),"\n",(0,t.jsxs)(n.p,{children:["To do so, use the command ",(0,t.jsx)(n.code,{children:"keys:create"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"swaptoshi-core keys:create --output config/keys.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Next, you will be prompted for the validator ",(0,t.jsx)(n.strong,{children:"passphrase"}),", and it will also ask for a ",(0,t.jsx)(n.strong,{children:"password"}),", in order to symmetrically encrypt the passphrase for the config."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"? Please enter passphrase:  [hidden]\n? Please re-enter passphrase:  [hidden]\n? Please enter password:  [hidden]\n? Please re-enter password:  [hidden]\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"The password is sensitive information.\nStore the password used here for the encryption somewhere safe.\nIt will be required every time to enable block generation, in order to decrypt the generator keys in the node."})}),"\n",(0,t.jsxs)(n.p,{children:["This will generate the following ",(0,t.jsx)(n.strong,{children:"config/keys.json"})," file, which includes all important keys for the validator account:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "keys": [\n    {\n      "address": "klyp24b6ev62w67v8qvk8wnvkhh2gv3hcoohes5z3",\n      "keyPath": "m/44\'/134\'/0\'",\n      "publicKey": "83eac294606806e0f4125203e2d0dac5ef1fc8730d5ec12e77e94f823f2262fa",\n      "privateKey": "eafb0bc7f148e60f69fda52e0cc862071871bbfff884aad095ae84bdde8d298283eac294606806e0f4125203e2d0dac5ef1fc8730d5ec12e77e94f823f2262fa",\n      "plain": {\n        "generatorKeyPath": "m/25519\'/134\'/0\'/0\'",\n        "generatorKey": "97fe3280b25ca122cf91eb891c157c939becd75a7fed394254b1005608c3bffc",\n        "generatorPrivateKey": "67afd3d3eda7c060f8f4e19540a5416c2d29a6dc687b47a5bebcd41d9d0df1e897fe3280b25ca122cf91eb891c157c939becd75a7fed394254b1005608c3bffc",\n        "blsKeyPath": "m/12381/134/0/0",\n        "blsKey": "a3dcd6dedf3a0cf45608f9e1f3844e8b30c033c186851671ea1a655541b3fda482e4617f67367438012cf0855fadda13",\n        "blsProofOfPossession": "954f4f6be134626367353d68cd19d00a3475dd0cb0961605ec925c659c581c0a91e6223715eba261cca817aca134078e014d1f340aac32e21038a861708e8b2c33190d0dc32902fde8b270490a7f81a8ea5736bfcaaaf502704f0d9573623dd3",\n        "blsPrivateKey": "07dec698f9b62092196c15b8074dc6a0366722cd77b351f968b2291c1fbcc699"\n      },\n      "encrypted": {\n        "ciphertext": "4e9c24db810fb641d9ad148e0a9c461db5c52b001592c910b2b11a4f4ce9bf271d530d2bfd9a6b50c59b09a4e872ef7a0ff65802e0bde6e685dd07db6b9b4f365b24af0488a5fdb3d4688b5c5a4ffbf302573a53219a1ec120bd1b1bc602e356bdb910ab7be245e7488409fc1ea059ffcb4382cfb309d5673a258cd2cf4114a39ffbb0097f3bef6985c45ea3ffbc2f7b793a2366d9e5921d3ba8490906a17bf458a85c19100834877fde498fc3165a02f68a72e1b6e8509f",\n        "mac": "1730decdc41721e0156f9aaad0685b1a65c0edc56d653c0ae6266f08826b13f3",\n        "kdf": "argon2id",\n        "kdfparams": {\n          "parallelism": 4,\n          "iterations": 1,\n          "memorySize": 2097023,\n          "salt": "34ac1bfb751d5f78"\n        },\n        "cipher": "aes-128-gcm",\n        "cipherparams": {\n          "iv": "9c6903d0c6e6ab900e9389d8466dd8ff",\n          "tag": "8e21a9239cb4d5855e54cf9da34bc5ce"\n        },\n        "version": "1"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"The generated keys are very sensitive information."}),(0,t.jsxs)(n.p,{children:["Especially the not encrypted values need to be treated ",(0,t.jsx)(n.strong,{children:"equally sensitive as the passphrase for an account."}),"\nSo after the keys are imported in step ",(0,t.jsx)(n.a,{href:"#import-the-validator-keys",children:"Import the validator keys"}),", make sure to store the file somewhere safe, or delete the file completely."]})]}),"\n",(0,t.jsx)(n.h3,{id:"create-the-register-validator-transaction",children:"Create the Register Validator transaction"}),"\n",(0,t.jsx)(n.p,{children:"Create a transaction to register your account as a validator."}),"\n",(0,t.jsx)(n.p,{children:"The following parameters are required:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": The unique name of the new validator.\nPlease be aware that the name can have a ",(0,t.jsx)(n.strong,{children:"maximum length of 20 characters"}),", and only the following ",(0,t.jsxs)(n.strong,{children:["characters are allowed: ",(0,t.jsx)(n.code,{children:"[a-z0-9!@$&_.]"})]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"generatorKey"}),": The public key whose corresponding private key is used to sign blocks generated by the validator.\nTo enhance security, the ",(0,t.jsx)(n.code,{children:"generatorKey"})," is different from the key used to sign transactions in the network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"blsKey"}),": The public BLS key whose corresponding private key is used to sign certificates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"proofOfPossession"}),": The cryptographic proof that the validator owns the corresponding private key to the BLS key.\nIn the validator keys file, it can be found under ",(0,t.jsx)(n.code,{children:"blsProofOfPosession"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["For more details about the validator registration process and the related cryptography, check out ",(0,t.jsx)(n.a,{href:"https://github.com/KlayrHQ/lips/blob/main/proposals/lip-0044.md",children:"LIP 0044 - Introduce Validators module"})]})}),"\n",(0,t.jsxs)(n.p,{children:["The parameters mentioned in 2, 3, and 4 are all generated in the step ",(0,t.jsx)(n.a,{href:"#creating-the-validator-keys",children:"Creating the validator keys"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"transaction:create"})," command to create the ",(0,t.jsx)(n.code,{children:"registerValidator"})," transaction: (please modify the params with value you obtain above)"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"If it is not already running, start the node to create the transaction as described below."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'swaptoshi-core transaction:create pos registerValidator 1100000000 \\\n--params=\'{"name":"myuniqueame","generatorKey":"aaecd278a3fadc40a4a824d6f4aa24547d8fb9d075ec4d6967a7084f9a3f2541","blsKey":"815a9e7643cf2bace98d1337f1dca8e39949592cd3fcb79bf3ab5784981468b9987b3340527bc9ca263a2fd061812024","proofOfPossession":"add8669bb57f3dceec04dc0f875906cb52a677f1df911536c01f447c8830bf27cd43713af18d84de5a64ec504aeaf9a30521c09438bb5a4d5fd634946c65e0fc4ea3681fdb4f6949cb6c1bc1ac1ddec3df058a13466af5a13d50737938fd7d5f"}\'\n'})}),"\n",(0,t.jsx)(n.p,{children:"Next, enter the passphrase of your account."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"? Please enter passphrase:  [hidden]\n? Please re-enter passphrase:  [hidden]\n"})}),"\n",(0,t.jsx)(n.p,{children:"The CLI will return the transaction already in hex format, ready to be posted to a node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transaction": "0a0464706f731210726567697374657244656c656761746518002080d6c28c042a206290c8b58de8b71fedb7e3cb9a6ee9426aa3e7ac0141f278526375d46705b54632be010a066d796e616d651220aaecd278a3fadc40a4a824d6f4aa24547d8fb9d075ec4d6967a7084f9a3f25411a30815a9e7643cf2bace98d1337f1dca8e39949592cd3fcb79bf3ab5784981468b9987b3340527bc9ca263a2fd0618120242260add8669bb57f3dceec04dc0f875906cb52a677f1df911536c01f447c8830bf27cd43713af18d84de5a64ec504aeaf9a30521c09438bb5a4d5fd634946c65e0fc4ea3681fdb4f6949cb6c1bc1ac1ddec3df058a13466af5a13d50737938fd7d5f3a40d841c3ea463e2c2fd598bd56c77998241bc86e8143e59baf5f06b11491f3c8557e2d82c1139f927adcb0055256f5a5419a4853950856c2e9ae3588a7885a3f05"\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["To return the transaction in JSON format as well, add the flags ",(0,t.jsx)(n.code,{children:"--json"})," and ",(0,t.jsx)(n.code,{children:"--pretty"})," to the command."]})}),"\n",(0,t.jsx)(n.h3,{id:"send-the-transaction",children:"Send the transaction"}),"\n",(0,t.jsx)(n.p,{children:"Copy the transaction in the hex format that was created in the previous step and post it to the node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"swaptoshi-core transaction:send 0805100018032080d6c28c042a20bad983c72bed43fd274f852658c298b74c71ab6fc50508879fef309e3836384b32080a066d796e616d653a4045afdd04d0c0bc6e548c0915d5fabef1311b1b75b1eb919a43b88dab539e7b6a99b9075f5d6382ec3bbebfca3301651a15d8af3f999d5b6fa7873b3969cd3d0c\n"})}),"\n",(0,t.jsx)(n.p,{children:"If the sending process was successful, it will return the following message, including the respective transaction ID."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Transaction with id: '1809da284fe26dba90d34dc3aab837a32d3c291a4ca78a9bfa263f927c69598a' received by node.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"check-validator-details",children:"Check validator details"}),"\n",(0,t.jsxs)(n.p,{children:["After the ",(0,t.jsx)(n.code,{children:"registerValidator"})," transaction got included in a block, invoke the ",(0,t.jsx)(n.code,{children:"pos_getValidator"})," endpoint, to verify the account has now registered a validator name:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'swaptoshi-core endpoint:invoke pos_getValidator \'{ "address":"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3"}\' --pretty\n'})}),"\n",(0,t.jsx)(n.p,{children:"The new validator\u2019s name should be displayed in the response, along with the corresponding address and other public information about the particular validator."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "myuniquename",\n  "totalStakeReceived": "0",\n  "selfStake": "0",\n  "lastGeneratedHeight": 14,\n  "isBanned": false,\n  "pomHeights": [],\n  "consecutiveMissedBlocks": 0,\n  "commission": 10000,\n  "lastCommissionIncreaseHeight": 14,\n  "sharingCoefficients": [],\n  "address": "klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3",\n  "punishmentPeriods": []\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"allow-methods-in-the-node-config",children:"Allow methods in the node config"}),"\n",(0,t.jsxs)(n.p,{children:["To be able to run certain validator-related commands of the node, it is required to enable security-sensitive methods in the node ",(0,t.jsx)(n.strong,{children:"config.json"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "rpc": {\n    "modes": ["ipc"],\n    "allowedMethods": ["generator", "system", "random"]\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Restart the node with the ",(0,t.jsx)(n.code,{children:"--overwrite-config"})," flag, to load the updated configuration."]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"allowedMethods"})," refers to the ",(0,t.jsx)(n.code,{children:"method"})," defined in the ",(0,t.jsx)(n.a,{href:"https://www.jsonrpc.org/specification",children:"JSON-RPC specification"}),"."]}),(0,t.jsxs)(n.p,{children:["Add the ",(0,t.jsx)(n.code,{children:"namespace"}),", to allow all endpoints of ",(0,t.jsx)(n.code,{children:"namespace"}),", or ",(0,t.jsx)(n.code,{children:"namespace_endpointName"})," to allow a specific endpoint."]})]}),"\n",(0,t.jsx)(n.h2,{id:"import-the-validator-keys",children:"Import the validator keys"}),"\n",(0,t.jsxs)(n.p,{children:["After creating the validator keys as suggested in the ",(0,t.jsx)(n.a,{href:"#creating-the-validator-keys",children:"Creating the validator keys"})," section, the next step is to import them into the node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"swaptoshi-core keys:import --file-path config/keys.json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"verifying-correct-import",children:"Verifying correct import"}),"\n",(0,t.jsx)(n.p,{children:"After the validator keys are imported to the node, it is possible to verify that the import worked as expected with the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"swaptoshi-core endpoint:invoke generator_getAllKeys --pretty\n"})}),"\n",(0,t.jsx)(n.p,{children:"That will return the validator keys that are currently imported on the node:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "keys": [\n    {\n      "address": "klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3",\n      "type": "encrypted",\n      "data": {\n        "ciphertext": "4e9c24db810fb641d9ad148e0a9c461db5c52b001592c910b2b11a4f4ce9bf271d530d2bfd9a6b50c59b09a4e872ef7a0ff65802e0bde6e685dd07db6b9b4f365b24af0488a5fdb3d4688b5c5a4ffbf302573a53219a1ec120bd1b1bc602e356bdb910ab7be245e7488409fc1ea059ffcb4382cfb309d5673a258cd2cf4114a39ffbb0097f3bef6985c45ea3ffbc2f7b793a2366d9e5921d3ba8490906a17bf458a85c19100834877fde498fc3165a02f68a72e1b6e8509f",\n        "mac": "1730decdc41721e0156f9aaad0685b1a65c0edc56d653c0ae6266f08826b13f3",\n        "kdf": "argon2id",\n        "kdfparams": {\n          "parallelism": 4,\n          "iterations": 1,\n          "memorySize": 2097023,\n          "salt": "34ac1bfb751d5f78"\n        },\n        "cipher": "aes-128-gcm",\n        "cipherparams": {\n          "iv": "9c6903d0c6e6ab900e9389d8466dd8ff",\n          "tag": "8e21a9239cb4d5855e54cf9da34bc5ce"\n        },\n        "version": "1"\n      }\n    }F\n]}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"set-the-hash-onion",children:"Set the hash onion"}),"\n",(0,t.jsx)(n.p,{children:"If the hash onion is absent, a validator will be unable to receive rewards for block generation, even though the blocks would remain valid in such a scenario.\nTo ensure that no rewards are missed, a validator must set the hash onion before enabling block generation on the node."}),"\n",(0,t.jsxs)(n.p,{children:["To setup hash onion for 1,000,000 blocks, first make sure you already install ",(0,t.jsx)(n.code,{children:"jq"}),"."]}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(s.A,{value:"Ubuntu",label:"Ubuntu",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sudo apt install -y jq\n"})})}),(0,t.jsxs)(s.A,{value:"MacOS",label:"MacOS",children:[(0,t.jsxs)(n.p,{children:["Ensure that both ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/xcode/",children:"XCode"})," and ",(0,t.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"})," are installed."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"brew install jq\n"})})]})]}),"\n",(0,t.jsx)(n.p,{children:"use this command by replacing the ADDRESS with your address."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ADDRESS=\"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3\"; swaptoshi-core hash-onion --count 1000000 --output $HOME/hash_onion.json; jq --arg x $ADDRESS '. + {address: $x}' $HOME/hash_onion.json > tmp && mv tmp $HOME/hash_onion.json; swaptoshi-core endpoint:invoke random_setHashOnion --file $HOME/hash_onion.json; rm $HOME/hash_onion.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To verify that the hash onion was set correctly, ",(0,t.jsx)(n.a,{href:"#get-the-hash-onion",children:"Get the hash onion"})," back from the node."]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["If you use the default ",(0,t.jsx)(n.code,{children:"random_setHashOnion"})," endpoint from ",(0,t.jsx)(n.code,{children:"swaptoshi-core"}),", it will only generate a hash onion for 10,000 blocks."]}),(0,t.jsx)(n.p,{children:"It is recommended to use the command above to set up more hash onions for peace of mind. However, if you wish to generate a hash onion every 10,000 blocks, you can use this command:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'swaptoshi-core endpoint:invoke random_setHashOnion \'{"address":"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3"}\'\n'})})]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"If you see the following error after running the command:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ swaptoshi-core endpoint:invoke random_setHashOnion \'{"address":"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3"}\'\n \u203a   Error: Response not received in 3000ms\n'})}),(0,t.jsxs)(n.p,{children:["This suggests that the API timed out.\nHowever, the hash onion is still created in most cases.\nYou can wait for a while and then ",(0,t.jsx)(n.a,{href:"#get-the-hash-onion",children:"Get the hash onion"}),", to verify that it actually is set."]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u2757 IMPORTANT: Import of an existing hash onion"})}),(0,t.jsxs)(n.p,{children:["When attempting to migrate to a new or a different node, it is crucial that the hash onions from the previous node are used.\nUse the previously stored hash onion seed values such as the ",(0,t.jsx)(n.code,{children:"address"}),", ",(0,t.jsx)(n.code,{children:"seed"}),", ",(0,t.jsx)(n.code,{children:"count"}),", and ",(0,t.jsx)(n.code,{children:"distance"})," to successfully migrate information from the previous node to a newer node."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'swaptoshi-core endpoint:invoke random_setHashOnion \'{"address":"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3","seed":"2aa20ce749838a5c6bac8bdf14dcebd8","count":1000000,"distance":1000}\'\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"get-the-hash-onion",children:"Get the hash onion"}),"\n",(0,t.jsxs)(n.p,{children:["Currently, there is nothing else to do with the hash onion, after it is created.\nThere are some situations though, where it is needed to get the seed hash onion back, for example, when ",(0,t.jsx)(n.a,{href:"./enable-block-generation#safely-enabling-block-generation-on-another-node",children:"moving from one node to another"}),".\nIn that case, retrieve the hash onions from the node as described below, and store them in a secure location.\nLater on, these values can be used to import hash onions to a newer node."]}),"\n",(0,t.jsxs)(n.p,{children:["To get the hash onion seed, request the ",(0,t.jsx)(n.code,{children:"random_getHashOnionSeeds"})," endpoint."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'swaptoshi-core endpoint:invoke random_getHashOnionSeeds \'{"address":"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3"}\' --pretty\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will return a list of all hash onion seeds that are stored in the node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "seeds": [\n    {\n      "address": "klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3",\n      "seed": "5be11bacb61de5c1309d50a5548b1834",\n      "count": 1000000,\n      "distance": 1000\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can also retrieve the usage stats of the hash onions of an account by invoking the ",(0,t.jsx)(n.code,{children:"random_getHashOnionUsage"})," endpoint."]}),"\n",(0,t.jsx)(n.h2,{id:"initial-validator-info-data",children:"Initial validator info data"}),"\n",(0,t.jsxs)(n.p,{children:["If a validator has never created a block on the blockchain before, the initial values of the ",(0,t.jsx)(n.a,{href:"./enable-block-generation#validator-info-data",children:"validator info data"})," are as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"}),": ",(0,t.jsx)(n.code,{children:"0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxHeightGenerated"}),": ",(0,t.jsx)(n.code,{children:"0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxHeightPrevoted"}),": ",(0,t.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-to-enable-block-generation-for-the-first-time",children:"How to enable block generation for the first time"}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\ud83d\udd25 CAUTION: Check this before enabling block generation on a node:"})}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure the node is running."}),"\n",(0,t.jsxs)(n.li,{children:["Ensure the node is ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"fully synchronized"})})," with the network.\nThis is particularly relevant for nodes who have been set up recently, because they might not have caught up with the current state of the network, yet.\nTo verify that your node is fully synched, request the ",(0,t.jsx)(n.code,{children:"system_getNodeInfo"})," endpoint.\nIt should return ",(0,t.jsx)(n.code,{children:'"syncing": false'}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["To avoid breaking the BFT rules and being punished by the network, adhere to the following points:","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Never activate block generation for the same validator on two or more nodes at the same time."}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"generator:enable"})," command to enable block generation on your node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"swaptoshi-core generator:enable klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3 --height=0 --max-height-generated=0 --max-height-prevoted=0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3"})," with your validator address."]}),"\n",(0,t.jsxs)(n.p,{children:["Next, you will be prompted for the password that was defined in step ",(0,t.jsx)(n.a,{href:"#creating-the-validator-keys",children:"Creating the validator keys"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"? Enter password to decrypt the encrypted passphrase:  ********\n"})}),"\n",(0,t.jsx)(n.p,{children:"Block generation should now be enabled for the validator.\nThis is confirmed by the following message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Enabled block generation for klyqaxxmj78frvgpjgwvf4yqjjkcrr9yhn2sxxwm3\n"})}),"\n",(0,t.jsx)(n.h2,{id:"how-to-stake-to-increase-the-validator-weight",children:"How to stake to increase the validator weight"}),"\n",(0,t.jsxs)(n.p,{children:["If you followed all of the above steps, your node is now well-prepared to start generating blocks in the network.\nThe last remaining step is now to perform a ",(0,t.jsx)(n.a,{href:"https://klayr.xyz/documentation/understand-blockchain/consensus/pos-poa.html#self-stake",children:"self-stake"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Without performing a self-stake, a validator will never be considered by the validator selection algorithm.\nBeing selected directly depends on the ",(0,t.jsx)(n.strong,{children:"validator weight"}),", and this is computed directly from the stakes and self-stakes of a validator, as defined in the Klayr PoS protocol"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["For more details about the Klayr staking protocol which Swaptoshi is based on, please read ",(0,t.jsx)(n.a,{href:"https://github.com/KlayrHQ/lips/blob/main/proposals/lip-0023.md",children:"LIP 0023 - Introduce vote locking periods and new vote weight definition"}),"."]}),(0,t.jsxs)(n.p,{children:["Please also check the ",(0,t.jsx)(n.a,{href:"https://klayr.xyz/documentation/understand-blockchain/consensus/pos-poa.html#validator-weight",children:"Klayr validator weight"})," explanation for further information on the topic."]})]}),"\n",(0,t.jsxs)(n.p,{children:["For each blockchain network, there is a specific ",(0,t.jsx)(n.strong,{children:"minimum validator weight"})," that is required for a validator to be considered for block generation in general."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"In the Swaptoshi Mainnet, the minimum validator weight is 10 SWX."})}),"\n",(0,t.jsx)(n.p,{children:"The required validator weight to achieve an active position in the block generation is relative to the validator weights of the other validators who are participating in the network.\nA good way to check the exact validator weight required to reach an active position is to just check the validator weights of the currently active 51 validators."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Please note, that even if you do not have enough validator weight to be an active validator, there is still a chance for you in each round to be selected as one of the two random validators.\nTo be considered for the random selection, a validator just needs to have a weight equal to or greater than the minimum validator weight of the network."})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>s});a(6540);var t=a(4164);const o={tabItem:"tabItem_Ymn6"};var r=a(4848);function s(e){let{children:n,hidden:a,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,s),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>w});var t=a(6540),o=a(4164),r=a(3104),s=a(6347),i=a(205),d=a(7485),c=a(1682),l=a(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:o}}=e;return{value:n,label:a,attributes:t,default:o}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function p(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function u(e){let{queryString:n=!1,groupId:a}=e;const o=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,d.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function b(e){const{defaultValue:n,queryString:a=!1,groupId:o}=e,r=f(e),[s,d]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,h]=u({queryString:a,groupId:o}),[b,m]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,l.Dv)(a);return[o,(0,t.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:o}),x=(()=>{const e=c??b;return p({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{x&&d(x)}),[x]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),m(e)}),[h,m,r]),tabValues:r}}var m=a(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=a(4848);function j(e){let{className:n,block:a,selectedValue:t,selectValue:s,tabValues:i}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),l=e=>{const n=e.currentTarget,a=d.indexOf(n),o=i[a].value;o!==t&&(c(n),s(o))},h=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;n=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;n=d[a]??d[d.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},n),children:i.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>d.push(e),onKeyDown:h,onClick:l,...r,className:(0,o.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=b(e);return(0,g.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,g.jsx)(j,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,g.jsx)(y,{...e,children:h(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var t=a(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);